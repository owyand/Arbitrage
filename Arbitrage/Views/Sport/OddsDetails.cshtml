@using System.Globalization;
@model IEnumerable<OddsModel>                            
                                                           
@*iterate through model displaying information using cards 
*@   

<h1>This is the odds page</h1>

<table class="table">
  <tr>
    @{ 
      var count = 0;
    }

    @foreach (var game in Model)
    {
        //get a formatted day and time
        DateTime startTime;
        string formattedStartTime = "unable to parse start time.";

        if (DateTime.TryParseExact(game.CommenceTime, "yyyy-MM-ddTHH:mm:ssZ", CultureInfo.InvariantCulture, DateTimeStyles.None, out startTime))
        {
            formattedStartTime = startTime.ToString("dddd, MMMM dd, yyyy - h:mm tt"); // Example format: "Monday, February 17, 2024 - 2:00 AM"
        }
        else
        {
            Console.WriteLine("Unable to parse start time.");
        }
      
      if (count % 2 == 0) 
      {
        @:</tr><tr>
      }

      <td class="col-3">
        <div class="card shadow text-center">
            <div class="card-header">
                @game.HomeTeam vs. @game.AwayTeam
            </div>
            <div class="card-body">
                <p>Commence Time: @formattedStartTime</p>
                <p>League: @game.SportKey</p>
@*              <p>League: @game.SportTitle</p>
*@              <p>Event Id: @game.Id</p>
                
@*                <table>
                    <thead>
                        <th>Bookmaker</th>
                        <th></th>
                    </thead>
                </table>
                        @foreach(var bookmaker in game.Bookmakers)
                        {
                            <table>
                                <thead></thead>
                            </table>
                        }*@
@*                @using (Html.BeginForm("Index", null, FormMethod.Post))
                {
                    @Html.HiddenFor(m => game.Bookmakers) 
                    <button type="submit">See Bookmakers' Odds</button>
                }*@

                @{
                    var bookmakersExample = "Bookmakers{[Key|Title|LastUpdate|Markets{}]&[Key|Title|LastUpdate|Markets{}]}";

                    List<string> bookmakers = new List<string>();

                    //gather all bookmakers
                    foreach (var bookmaker in game.Bookmakers)
                    {
                        var marketsExample = "Markets{[marketKey|Outcomes{}]%[marketKey|Outcomes{}]}";

                        List<string> markets = new List<string>();

                        //gather all markets for this bookmaker
                        foreach (var market in bookmaker.Markets)
                        {
                            var outcomesExample = "Outcomes{[name|price|point?]#[name|price|point?]}";
                            List<string> outcomes = new List<string>();

                            //gather all outcomes for this market
                            foreach (var outcome in market.Outcomes)
                            {
                                string point = "0";
                                if (outcome.Point != null)
                                {
                                    point = outcome.Point.ToString();
                                }
                                string outcomeInfo = $"@{outcome.Name}/{outcome.Price.ToString()}/{point}@";
                                outcomes.Add(outcomeInfo);
                            }

                            string allOutcomeInfos = string.Join("#", outcomes);

                            //add any additional info for this market
                            string marketInfo = $"({market.Key};{allOutcomeInfos})";
                            markets.Add(marketInfo);
                        }

                        string allMarketInfos = string.Join("%", markets);

                        //add any additional info for this bookmaker
                        string bookmakerInfo = $"[{bookmaker.Key}|{bookmaker.Title}|{bookmaker.LastUpdate}|{allMarketInfos}]";
                        bookmakers.Add(bookmakerInfo);
                    }

                    string allBookmakerInfos = string.Join("&", bookmakers);
                }

                <a asp-controller="SportController" asp-action="BookmakerDetails" asp-route-id="@game.Id">See Bookmaker Odds</a>                                                                       
            </div>
        </div>
      </td>

        count++;
      
    }
  </tr>
</table>
